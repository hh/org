#+TITLE: Knative

* Start your Pair instances

with this Env, you'll get Knative+Contour (Contour replacing nginx-ingress)
#+begin_src
SHARINGIO_PAIR_INIT_EXTRAS=knative
#+end_src

* What is Knative?
- a serverless platform that runs a'top of Kubernetes
- event driven
- a way of abstracting and simplifying HTTP(1/2) apps on Kubernetes

* What is Serverless?
- code / container focused
- per-request processing

* Knative Services
Looks minimal eh?
#+begin_src yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: nginx
  namespace: bobymcbobs
spec:
  template:
    spec:
      containers:
      - image: nginx:stable
        ports:
        - containerPort: 80
#+end_src

** Behind the scenes
Service
-> Configuration
   -> Revision
      -> Deployment
         -> ReplicaSet
            -> Pod

But you don't really need to know much about it!

* Features
- request driven autoscaling
- image tag resolving
- traffic splitting
- auto domain assigning
- auto-tls termination
- custom domain assigning

* kn cli
** Create a service
#+begin_src tmate :window knative-playground
kn service create nginx --image=nginx:stable --port=80
#+end_src

** Delete a service
#+begin_src tmate :window knative-playground
kn service delete nginx
#+end_src

* Accessing services
#+begin_src shell
kn service list -A
#+end_src

#+RESULTS:
#+begin_example
NAMESPACE   NAME    URL                                             LATEST        AGE   CONDITIONS   READY   REASON
test        nginx   https://nginx.test.bobymcbobs.pair.sharing.io   nginx-00001   17m   3 OK / 3     True
#+end_example

* What makes up Knative Serving?
** Components
#+begin_src shell
kubectl -n knative-serving get deployment
#+end_src

#+RESULTS:
#+begin_example
NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
activator                    1/1     1            1           48m
autoscaler                   1/1     1            1           48m
autoscaler-hpa               1/1     1            1           48m
controller                   1/1     1            1           48m
domain-mapping               1/1     1            1           48m
domainmapping-webhook        1/1     1            1           48m
net-certmanager-controller   1/1     1            1           48m
net-certmanager-webhook      1/1     1            1           48m
net-contour-controller       1/1     1            1           48m
webhook                      1/1     1            1           48m
#+end_example

#+begin_notes
Activator: listens for endpoints hit and scales up revision deployments
#+end_notes

** Configuration
#+begin_src shell
kubectl -n knative-serving get cm
#+end_src

#+RESULTS:
#+begin_example
NAME                     DATA   AGE
config-autoscaler        1      59m
config-certmanager       2      59m
config-contour           1      59m
config-defaults          2      59m
config-deployment        2      59m
config-domain            2      59m
config-features          1      59m
config-gc                1      59m
config-leader-election   1      59m
config-logging           1      59m
config-network           5      59m
config-observability     1      59m
config-tracing           1      59m
kube-root-ca.crt         1      59m
#+end_example

#+begin_notes
Since we're using Knative-Operator we don't modify the configuration this way, but checking them out is useful for observing the exact config
#+end_notes

* Pair default Knative Serving configuration
#+begin_src shell :wrap "SRC yaml"
cat ~/.sharing.io/cluster-api/manifests/extras/knative/03-serving.yaml
#+end_src

#+RESULTS:
#+begin_SRC yaml
apiVersion: v1
kind: Namespace
metadata:
 name: knative-serving
---
apiVersion: operator.knative.dev/v1beta1
kind: KnativeServing
metadata:
  name: knative-serving
  namespace: knative-serving
spec:
  version: 1.3.0
  additionalManifests:
    - URL: https://github.com/knative/net-certmanager/releases/download/knative-v1.3.0/release.yaml
  ingress:
    istio:
      enabled: false
    kourier:
      enabled: false
    contour:
      enabled: true
  config:
    contour:
      default-tls-secret: ${SHARINGIO_PAIR_INSTANCE_SETUP_USERLOWERCASE}/letsencrypt-prod-without-selector
    network:
      ingress-class: contour.ingress.networking.knative.dev
      clusteringress.class: contour.ingress.networking.knative.dev
      certificate-provider: cert-manager
      autocreate-cluster-domain-claims: "true"
      auto-tls: Enabled
      default-external-scheme: HTTPS
      http-protocol: Redirected
    defaults:
      container-name-template: "{{.Name}}"
    domain:
      ${SHARINGIO_PAIR_BASE_DNS_NAME}: ""
    certmanager:
      issuerRef: |
        kind: ClusterIssuer
        name: letsencrypt-prod-without-selector
#+end_SRC


* LOCAL VARS :noexport:
 Local Variables:
 eval: (setenv "MULTIPLEX_URL" (or (getenv "MULTIPLEX_URL") "https://reveal-multiplex.glitch.me"))
 eval: (set-variable 'org-re-reveal-root (getenv "MULTIPLEX_URL"))
 eval: (set-variable 'org-re-reveal-multiplex-url (concat (getenv "MULTIPLEX_URL") "/"))
 eval: (set-variable 'org-re-reveal-multiplex-socketio-url (concat (getenv "MULTIPLEX_URL") "/socket.io/socket.io.js"))
 End:
#+REVEAL_MULTIPLEX_SECRET: 16303595814587938032
#+REVEAL_MULTIPLEX_ID: 1ea00b34ec29b2a6
#+REVEAL_VERSION: 4
#+NOREVEAL_DEFAULT_FRAG_STYLE: YY
#+REVEAL_EXTRA_CSS: ./ii-style.css
#+NOREVEAL_EXTRA_JS: YY
#+REVEAL_HLEVEL: 2
#+REVEAL_MARGIN: 0
#+REVEAL_WIDTH: 5000
#+REVEAL_HEIGHT: 800
#+REVEAL_MAX_SCALE: 0.9
#+REVEAL_MIN_SCALE: 0.2
#+REVEAL_PLUGINS: (markdown notes highlight multiplex)
#+REVEAL_SLIDE_NUMBER: ""
#+REVEAL_PROGRESS: f
#+REVEAL_SPEED: 1
#+REVEAL_THEME: night
#+REVEAL_THEME_OPTIONS: beige|black|blood|league|moon|night|serif|simple|sky|solarized|white
#+REVEAL_TRANS: fade
#+REVEAL_TRANS_OPTIONS: none|cube|fade|concave|convex|page|slide|zoom
#+REVEAL_TITLE_SLIDE: <h1>%t</h1>
#+REVEAL_TITLE_SLIDE: <h3>%s</h3>
#+REVEAL_TITLE_SLIDE: <p>%a</p>

#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: mathjax:Y
#+OPTIONS: reveal_single_file:nil
#+OPTIONS: reveal_control:t
#+OPTIONS: reveal_progress:nil
#+OPTIONS: reveal_history:nil
#+OPTIONS: reveal_center:t
#+OPTIONS: reveal_rolling_links:nil
#+OPTIONS: reveal_keyboard:t
#+OPTIONS: reveal_overview:t
#+OPTIONS: reveal_width:1200
#+OPTIONS: reveal_height:800
#+OPTIONS: reveal_fragmentinurl:t
#+OPTIONS: timestamp:nil
#+OPTIONS: reveal_title_slide:nil

* Set up :noexport:
Link up this folder to the web
#+begin_src shell :results silent
rm ~/public_html
ln -s $PWD ~/public_html
#+end_src

Generate a token
#+begin_src shell
curl -s ${MULTIPLEX_URL:-reveal-multiplex.glitch.me}/token | jq .
#+end_src

#+RESULTS:
#+begin_example
{
  "secret": "16303595814587938032",
  "socketId": "1ea00b34ec29b2a6"
}
#+end_example
