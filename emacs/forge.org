#+TITLE: Setting up Forge
#+AUTHOR: Hippie Hacker
#+EMAIL: hh@ii.coop
#+CREATOR: ii.coop
#+DATE: 12th of February, 2019
#+PROPERTY: header-args:shell :results output code verbatim replace
#+PROPERTY: header-args:shell+ :prologue "exec 2>&1\n"
#+PROPERTY: header-args:shell+ :epilogue ":\n"
#+PROPERTY: header-args:shell+ :wrap "EXAMPLE :noeval t"
#+PROPERTY: header-args:shell+ :dir (symbol-value 'org-file-dir)
#+PROPERTY: header-args:tmate  :socket (symbol-value 'socket)
#+PROPERTY: header-args:tmate+ :session (concat (user-login-name) ":" (nth 4 (org-heading-components)))
#+PROPERTY: header-args:tmate+ :prologue (concat "cd " org-file-dir "\n") 
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+STARTUP: showeverything

* Add forge to spacemacs

#+BEGIN_SRC shell
git clone https://github.com/magit/forge.git ~/.emacs.d/private/local/forge
#+END_SRC

#+BEGIN_SRC elisp
 (defun dotspacemacs/user-config ()
   "Initialization for user code:..."
   ;; add this somewhere within dotspacemacs/user-config()
    ;; (add-to-list 'load-path "~/.emacs.d/private/local/forge/lisp/")
    ;; (load "~/.emacs.d/private/local/forge/lisp/forge.el")
    (add-to-list 'load-path "/usr/local/share/emacs/site-lisp/forge/lisp/")
    (load "/usr/local/share/emacs/site-lisp/forge/lisp/forge.el")
    (add-to-list 'forge-alist '("gitlab.ii.coop" "gitlab.ii.coop/api/v4" "gitlab.ii.coop" forge-gitlab-repository))
)
#+END_SRC

* ~/.authinfo
[[https://www.emacswiki.org/emacs/GnusAuthinfo]]
[[https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html]]

Basically a current version, gpg encrypted of .netrc

For our purposes we will need:

#+BEGIN_SRC netrc
machine gitlab.ii.coop/api/v4 login hh^forge password API_TOKEN
machine api.github.com login hh^forge password API_TOKEN
#+END_SRC

* Create a gitlab.ii.coop token

https://gitlab.ii.coop/profile/personal_access_tokens

* Bugs
** "BUG: missing headers nil"
https://github.com/magit/ghub/issues/81

Quickest fix? Emacs master branch from mid-January
** Also needs update to elpa-mirror

#+BEGIN_SRC shell
cd /usr/local/elpa-mirror
git remote add upstream https://github.com/d12frosted/elpa-mirror.git
git fetch -a upstream
git checkout -b upstream upstream/master
# revert to stable org... it conflicts
git checkout stable org
#+END_SRC

org / org-plus-contrib from 20190211 doesn't work.
We need something closer to 20181126.
Though I think we can upgrade pretty much everything else.

#+BEGIN_SRC shell :noeval t
root@p70:/usr/local/elpa-mirror# git status
On branch upstream
Your branch is up to date with 'upstream/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   org/archive-contents
	new file:   org/org-20181126.tar
	new file:   org/org-plus-contrib-20181126.tar

root@p70:/usr/local/elpa-mirror# git diff upstream org/archive-contents
diff --git a/org/archive-contents b/org/archive-contents
index 7c7fef8db3..226b9df6f3 100644
--- a/org/archive-contents
+++ b/org/archive-contents
@@ -1,2 +1,2 @@
-(1 (org              . [(20190211) ( ) "Outline-based notes management and organizer" tar])
-   (org-plus-contrib . [(20190211) ( ) "Outline-based notes management and organizer" tar]))
+(1 (org              . [(20181126) ( ) "Outline-based notes management and organizer" tar])
+   (org-plus-contrib . [(20181126) ( ) "Outline-based notes management and organizer" tar]))
#+END_SRC
* Footer
# Local Variables:
# eval: (set (make-local-variable 'org-file-dir) (file-name-directory buffer-file-name))
# eval: (set (make-local-variable 'user-buffer) (concat user-login-name "." (file-name-base buffer-file-name)))
# eval: (set (make-local-variable 'tmpdir) (make-temp-file (concat "/dev/shm/" user-buffer "-") t))
# eval: (set (make-local-variable 'socket) (concat "/tmp/" user-buffer ".iisocket"))
# eval: (set (make-local-variable 'select-enable-clipboard) t)
# eval: (set (make-local-variable 'select-enable-primary) t)
# eval: (set (make-local-variable 'start-tmate-command) (concat "tmate -S " socket " new-session -A -s " user-login-name " -n main \"tmate wait tmate-ready && tmate display -p '#{tmate_ssh}' | xclip -i -sel p -f | xclip -i -sel c; bash --login\""))
# eval: (xclip-mode 1) 
# eval: (gui-select-text start-tmate-command)
# org-babel-tmate-session-prefix: ""
# org-babel-tmate-default-window-name: "main"
# org-use-property-inheritance: t
# End:
