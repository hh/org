#+TITLE: Kind CI Box
#+AUTHOR: Hippie Hacker
#+EMAIL: hh@ii.coop
#+CREATOR: ii.coop
#+DATE: 19th of February, 2019
#+PROPERTY: header-args:shell :results output code verbatim replace
#+PROPERTY: header-args:shell+ :prologue ". /etc/profile.d/homedir-go-path.sh\n. /etc/profile.d/system-go-path.sh\nexec 2>&1\n"
#+PROPERTY: header-args:shell+ :epilogue ":\n"
#+PROPERTY: header-args:shell+ :wrap "EXAMPLE :noeval t"
#+PROPERTY: header-args:shell+ :dir (symbol-value 'org-file-dir)
#+PROPERTY: header-args:tmate  :socket (symbol-value 'socket)
#+PROPERTY: header-args:tmate+ :session (concat (user-login-name) ":" (nth 4 (org-heading-components)))
#+PROPERTY: header-args:tmate+ :prologue (concat "cd " org-file-dir "\n") 
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+STARTUP: showeverything


* build
#+BEGIN_SRC tmate
kind build base-image
#+END_SRC
** shell command
#+NAME: kind build base-image
#+BEGIN_SRC shell
kind build base-image
#+END_SRC

#+RESULTS: kind build base-image
#+BEGIN_EXAMPLE :noeval t
free(): invalid pointer
SIGABRT: abort
PC=0xffff989f94d8 m=0 sigcode=18446744073709551610
signal arrived during cgo execution

goroutine 1 [syscall, locked to thread]:
runtime.cgocall(0x49fb28, 0x442007fcd8, 0x29)
	/usr/lib/go-1.8/src/runtime/cgocall.go:131 +0x9c fp=0x442007fca0 sp=0x442007fc60
github.com/docker/docker-credential-helpers/secretservice._Cfunc_free(0x37baad30)
	github.com/docker/docker-credential-helpers/secretservice/_obj/_cgo_gotypes.go:111 +0x38 fp=0x442007fcd0 sp=0x442007fca0
github.com/docker/docker-credential-helpers/secretservice.Secretservice.List.func5(0x37baad30)
	/build/golang-github-docker-docker-credential-helpers-iveBZG/golang-github-docker-docker-credential-helpers-0.5.0/obj-aarch64-linux-gnu/src/github.com/docker/docker-credential-helpers/secretservice/secretservice_linux.go:96 +0x44 fp=0x442007fd00 sp=0x442007fcd0
github.com/docker/docker-credential-helpers/secretservice.Secretservice.List(0x0, 0x554f80, 0x4420014370)
	/build/golang-github-docker-docker-credential-helpers-iveBZG/golang-github-docker-docker-credential-helpers-0.5.0/obj-aarch64-linux-gnu/src/github.com/docker/docker-credential-helpers/secretservice/secretservice_linux.go:97 +0x1c4 fp=0x442007fda0 sp=0x442007fd00
github.com/docker/docker-credential-helpers/secretservice.(*Secretservice).List(0x57b3b8, 0x40ed60, 0x442000c001, 0x40e80c)
	<autogenerated>:4 +0x48 fp=0x442007fde0 sp=0x442007fda0
github.com/docker/docker-credential-helpers/credentials.List(0x555ac0, 0x57b3b8, 0x555000, 0x442000e018, 0x0, 0x0)
	/build/golang-github-docker-docker-credential-helpers-iveBZG/golang-github-docker-docker-credential-helpers-0.5.0/obj-aarch64-linux-gnu/src/github.com/docker/docker-credential-helpers/credentials/credentials.go:145 +0x28 fp=0x442007fe60 sp=0x442007fde0
github.com/docker/docker-credential-helpers/credentials.HandleCommand(0x555ac0, 0x57b3b8, 0xffffc2535daf, 0x4, 0x554fc0, 0x442000e010, 0x555000, 0x442000e018, 0x4420014300, 0x49f99c)
	/build/golang-github-docker-docker-credential-helpers-iveBZG/golang-github-docker-docker-credential-helpers-0.5.0/obj-aarch64-linux-gnu/src/github.com/docker/docker-credential-helpers/credentials/credentials.go:60 +0x12c fp=0x442007fed0 sp=0x442007fe60
github.com/docker/docker-credential-helpers/credentials.Serve(0x555ac0, 0x57b3b8)
	/build/golang-github-docker-docker-credential-helpers-iveBZG/golang-github-docker-docker-credential-helpers-0.5.0/obj-aarch64-linux-gnu/src/github.com/docker/docker-credential-helpers/credentials/credentials.go:41 +0x1a0 fp=0x442007ff50 sp=0x442007fed0
main.main()
	/build/golang-github-docker-docker-credential-helpers-iveBZG/golang-github-docker-docker-credential-helpers-0.5.0/secretservice/cmd/main_linux.go:9 +0x40 fp=0x442007ff80 sp=0x442007ff50
runtime.main()
	/usr/lib/go-1.8/src/runtime/proc.go:185 +0x1f4 fp=0x442007ffd0 sp=0x442007ff80
runtime.goexit()
	/usr/lib/go-1.8/src/runtime/asm_arm64.s:981 +0x4 fp=0x442007ffd0 sp=0x442007ffd0

goroutine 17 [syscall, locked to thread]:
runtime.goexit()
	/usr/lib/go-1.8/src/runtime/asm_arm64.s:981 +0x4

r0      0x0
r1      0xffffc2534ba8
r2      0x0
r3      0x8
r4      0x0
r5      0xffffc2534ba8
r6      0xffffffffffffffff
r7      0xffffffffffffffff
r8      0x87
r9      0xffffffffffffffff
r10     0xffffffffffffffff
r11     0xffffffffffffffff
r12     0xffffffffffffffff
r13     0xffffffffffffffff
r14     0x8
r15     0x0
r16     0x54e168
r17     0xffff98a3e838
r18     0xffff98b1aa70
r19     0xffff98b19000
r20     0x6
r21     0xffff98d33000
r22     0xffffc2534de0
r23     0x2
r24     0xffff98b19000
r25     0x1
r26     0xffff98af0778
r27     0x2
r28     0xffffc2534e10
r29     0xffffc2534b80
lr      0xffff989f9464
sp      0xffffc2534b80
pc      0xffff989f94d8
fault   0x0
Sending build context to Docker daemon  2.092MB
Step 1/20 : ARG BASE_IMAGE="ubuntu:18.04"
Step 2/20 : FROM ${BASE_IMAGE}
 ---> 21e0cf71370f
Step 3/20 : ARG ARCH="amd64"
 ---> Using cache
 ---> 3508e513051d
Step 4/20 : ARG DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> db84b99729f5
Step 5/20 : COPY clean-install /usr/local/bin/clean-install
 ---> Using cache
 ---> 995421f04dab
Step 6/20 : RUN chmod +x /usr/local/bin/clean-install
 ---> Using cache
 ---> 7fe6c819533e
Step 7/20 : RUN clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name "systemd-tmpfiles-setup.service" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo "ReadKMsg=no" >> /etc/systemd/journald.conf
 ---> Using cache
 ---> 03d0104d67eb
Step 8/20 : ARG DOCKER_VERSION="18.06.*"
 ---> Using cache
 ---> ecfa08963fc4
Step 9/20 : ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE="false"
 ---> Using cache
 ---> 1cc743c04138
Step 10/20 : RUN curl -fsSL "https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH="${ARCH}" add-apt-repository         "deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"     && clean-install "docker-ce=${DOCKER_VERSION}"
 ---> Running in aa3a0c0abe9b
OK
pub   rsa4096 2017-02-22 [SCEA]
      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
uid           [ unknown] Docker Release (CE deb) <docker@docker.com>
sub   rsa4096 2017-02-22 [S]

Get:1 https://download.docker.com/linux/ubuntu bionic InRelease [64.4 kB]
Get:2 http://ports.ubuntu.com/ubuntu-ports bionic InRelease [242 kB]
Get:3 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages [4256 B]
Get:4 http://ports.ubuntu.com/ubuntu-ports bionic-updates InRelease [88.7 kB]
Get:5 http://ports.ubuntu.com/ubuntu-ports bionic-backports InRelease [74.6 kB]
Get:6 http://ports.ubuntu.com/ubuntu-ports bionic-security InRelease [88.7 kB]
Get:7 http://ports.ubuntu.com/ubuntu-ports bionic/universe arm64 Packages [11.0 MB]
Get:8 http://ports.ubuntu.com/ubuntu-ports bionic/main arm64 Packages [1285 kB]
Get:9 http://ports.ubuntu.com/ubuntu-ports bionic/multiverse arm64 Packages [153 kB]
Get:10 http://ports.ubuntu.com/ubuntu-ports bionic/restricted arm64 Packages [572 B]
Get:11 http://ports.ubuntu.com/ubuntu-ports bionic-updates/restricted arm64 Packages [578 B]
Get:12 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 Packages [556 kB]
Get:13 http://ports.ubuntu.com/ubuntu-ports bionic-updates/universe arm64 Packages [796 kB]
Get:14 http://ports.ubuntu.com/ubuntu-ports bionic-updates/multiverse arm64 Packages [2440 B]
Get:15 http://ports.ubuntu.com/ubuntu-ports bionic-backports/universe arm64 Packages [3630 B]
Get:16 http://ports.ubuntu.com/ubuntu-ports bionic-security/main arm64 Packages [250 kB]
Get:17 http://ports.ubuntu.com/ubuntu-ports bionic-security/universe arm64 Packages [157 kB]
Get:18 http://ports.ubuntu.com/ubuntu-ports bionic-security/multiverse arm64 Packages [1409 B]
Fetched 14.8 MB in 6s (2459 kB/s)
Reading package lists...
Hit:1 https://download.docker.com/linux/ubuntu bionic InRelease
Hit:2 http://ports.ubuntu.com/ubuntu-ports bionic InRelease
Hit:3 http://ports.ubuntu.com/ubuntu-ports bionic-updates InRelease
Hit:4 http://ports.ubuntu.com/ubuntu-ports bionic-backports InRelease
Hit:5 http://ports.ubuntu.com/ubuntu-ports bionic-security InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
[91mE: Version '18.06.*' for 'docker-ce' was not found
[0mThe command '/bin/sh -c curl -fsSL "https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH="${ARCH}" add-apt-repository         "deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"     && clean-install "docker-ce=${DOCKER_VERSION}"' returned a non-zero code: 100
time="03:39:10" level=error msg="Docker build Failed! exit status 100"
Error: build failed: exit status 100
#+END_EXAMPLE


* cluster
#+BEGIN_SRC tmate
kind create cluster
#+END_SRC
** shell command
#+NAME: create cluster
#+BEGIN_SRC shell
kind create cluster
#+END_SRC

#+RESULTS: create cluster
#+BEGIN_EXAMPLE :noeval t
Creating cluster "kind" ...
 â€¢ Ensuring node image (kindest/node:v1.13.3) ðŸ–¼  ...
 âœ“ Ensuring node image (kindest/node:v1.13.3) ðŸ–¼
 â€¢ [control-plane] Creating node container ðŸ“¦  ...
time="03:46:00" level=error msg="machine-id-setup error: exit status 1"
 âœ— [control-plane] Creating node container ðŸ“¦
Error: failed to create cluster: machine-id-setup error: exit status 1
#+END_EXAMPLE

* Footer

#+NAME: start documentation session
#+BEGIN_SRC shell :noeval yes
ssh -tAX kind@arm.cncf.ci \
tmate -S /tmp/$USER.kind-ci-box.iisocket new-session -A -s kind -n emacs \
\"tmate wait tmate-ready \&\& sleep 2 \&\& \
  echo \\\`tmate display -p \'#{tmate_ssh}\'\\\` \\\# left \
  \| xclip -i -sel p -f \| xclip -i -sel c \&\& \
  emacs -nw org/sigs.k8s.io/kind/kind-ci-box.org\"
#+END_SRC

#+NAME: start repl session
#+BEGIN_SRC shell :noeval yes
ssh -tAX kind@arm.cncf.ci \
tmate -S /tmp/kind.kind-ci-box.iisocket new-session -A -s kind -n main \
\"tmate wait tmate-ready \&\& sleep 2 \&\& \
  echo \\\`tmate display -p \'#{tmate_ssh}\'\\\` \\\# right \
  \| xclip -i -sel p -f \| xclip -i -sel c \&\& \
  bash --login\"
#+END_SRC

# xclip on then off, due to this being a remote box
# eval: (xclip-mode 1) 
# Local Variables:
# eval: (set (make-local-variable 'org-file-dir) (file-name-directory buffer-file-name))
# eval: (set (make-local-variable 'user-buffer) (concat user-login-name "." (file-name-base buffer-file-name)))
# eval: (set (make-local-variable 'tmpdir) (make-temp-file (concat "/dev/shm/" user-buffer "-") t))
# eval: (set (make-local-variable 'socket) (concat "/tmp/" user-buffer ".iisocket"))
# eval: (set (make-local-variable 'select-enable-clipboard) t)
# eval: (set (make-local-variable 'select-enable-primary) t)
# eval: (set (make-local-variable 'start-tmate-command) (concat "tmate -S " socket " new-session -A -s " user-login-name " -n main \\\"tmate wait tmate-ready \\&\\& tmate display -p \\'#{tmate_ssh}\\' \\| xclip -i -sel p -f \\| xclip -i -sel c \\&\\& bash --login\\\""))
# eval: (xclip-mode 1) 
# eval: (gui-select-text (concat "ssh -tAX kind@arm.cncf.ci -L " socket ":" socket " " start-tmate-command))
# eval: (xclip-mode 0) 
# org-babel-tmate-session-prefix: ""
# org-babel-tmate-default-window-name: "main"
# org-use-property-inheritance: t
# End:
