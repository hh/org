#+TITLE: CHANGEME
#+AUTHOR: Hippie Hacker
#+EMAIL: hh@ii.coop
#+CREATOR: ii.coop
#+DATE: 29th of January, 2019
#+PROPERTY: header-args:shell :results output code verbatim replace
#+PROPERTY: header-args:shell+ :prologue "exec 2>&1\n"
#+PROPERTY: header-args:shell+ :epilogue ":\n"
#+PROPERTY: header-args:shell+ :wrap "EXAMPLE :noeval t"
#+PROPERTY: header-args:shell+ :dir (symbol-value 'org-file-dir)
#+PROPERTY: header-args:tmate  :socket (symbol-value 'socket)
#+PROPERTY: header-args:tmate+ :session (concat (user-login-name) ":" (nth 4 (org-heading-components)))
#+PROPERTY: header-args:tmate+ :prologue (concat "cd " org-file-dir "\n") 
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+STARTUP: showeverything

* Folder (temp and otherwise)
** In Org Folder

*** shell

#+NAME: print working dir
#+BEGIN_SRC shell
pwd
#+END_SRC

#+RESULTS: print working dir
#+BEGIN_EXAMPLE :noeval t
/home/hh/ii/org
#+END_EXAMPLE

*** tmate

#+BEGIN_SRC tmate :noweb yes
pwd
#+END_SRC

** In Temp Folder

:PROPERTIES:
:header-args:shell+: :dir (symbol-value 'tmpdir)
:header-args:tmate+: :prologue (concat "cd " tmpdir "\n") 
:END:

#+BEGIN_SRC shell
pwd
#+END_SRC

#+RESULTS:
#+BEGIN_SRC shell
/dev/shm/hh.template-8geaSN
#+END_SRC

#+BEGIN_SRC tmate
pwd
#+END_SRC

* Example Code Block Modifications
** Std Err 
  :PROPERTIES:
  :header-args:shell+: :prologue "exec 2>&1\n"
  :header-args:shell+: :epilogue ":\n"
  :header-args:shell+: :wrap "EXAMPLE"
  :END:

Capturing Errors (on stderr)

Shell code blocks will now prefix / postfix with exec where stderr is redirected to stdout and captured.

#+NAME: prologue
#+BEGIN_SRC
exec 2>&1
#+END_SRC

and appending:

#+NAME: epilogue
#+BEGIN_SRC
:
#+END_SRC

** Feeding blocks to a command
  :PROPERTIES:
  :header-args:shell+: :prologue "exec 2>&1\nbq query -n 2000 --nouse_legacy_sql  <<EOF\n"
  :header-args:shell+: :epilogue "\nEOF\n:\n"
  :header-args:shell+: :wrap "EXAMPLE"
  :END:


Each of the following code blocks will be fed to an application via HEREDOC.
The example here is big query.

#+NAME: prologue
#+BEGIN_EXAMPLE
exec 2>&1
bq query -n 2000 --nouse_legacy_sql  <<EOF
#+END_EXAMPLE

and appending:

#+NAME: epilogue
#+BEGIN_EXAMPLE
EOF
:
#+END_EXAMPLE

The exec + : ensure that stderr is captured.
We add ~bq~ and params feed the code block to big query.

* Footer
  :PROPERTIES:
  :header-args:shell+: :prologue "exec 2>&1\n"
  :header-args:shell+: :epilogue ":\n"
  :header-args:shell+: :wrap "EXAMPLE"
  :END:

Each of the following code blocks will be fed to big query via prefixing

#+NAME: prologue
#+BEGIN_SRC
exec 2>&1
#+END_SRC

and appending:

#+NAME: epilogue
#+BEGIN_SRC
:
#+END_SRC
** Local Variables Notes
The exec + : ensure that stderr is capture.

org-file-dir is the directory this file exists in
user-buffer is $USER.$FILENAME without .org ie. hh.filenamebase
socket is /tmp/$USER.$FILENAMEBASE.ii.socket
we copy the tmate command to clipboard and primary
tmpdir creates folder in the ramdisk on load
:async yes to enable async execution
As soon as you load this file, create a new terminal and paste to create target tmate session
# Local Variables:
# eval: (set (make-local-variable 'org-file-dir) (file-name-directory buffer-file-name))
# eval: (set (make-local-variable 'user-buffer) (concat user-login-name "." (file-name-base buffer-file-name)))
# eval: (set (make-local-variable 'tmpdir) (make-temp-file (concat "/dev/shm/" user-buffer "-") t))
# eval: (set (make-local-variable 'socket) (concat "/tmp/" user-buffer ".iisocket"))
# eval: (set (make-local-variable 'select-enable-clipboard) t)
# eval: (set (make-local-variable 'select-enable-primary) t)
# eval: (set (make-local-variable 'start-tmate-command) (concat "tmate -S " socket " new-session -A -s " user-login-name " -n main \"tmate wait tmate-ready && tmate display -p '#{tmate_ssh}' | xclip -i -sel p -f | xclip -i -sel c; bash --login\""))
# eval: (xclip-mode 1) 
# eval: (gui-select-text start-tmate-command)
# org-babel-tmate-session-prefix: ""
# org-babel-tmate-default-window-name: "main"
# org-use-property-inheritance: t
# End:
