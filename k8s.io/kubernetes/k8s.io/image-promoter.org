#+TITLE: Setting up Prow Configs for Image Promoter
#+AUTHOR: Hippie Hacker
#+EMAIL: hh@ii.coop
#+CREATOR: ii.coop
#+DATE: 20th of February, 2019
#+PROPERTY: header-args:shell :results output code verbatim replace
#+PROPERTY: header-args:shell+ :prologue ". /etc/profile.d/homedir-go-path.sh\n. /etc/profile.d/system-go-path.sh\nexec 2>&1\n"
#+PROPERTY: header-args:shell+ :epilogue ":\n"
#+PROPERTY: header-args:shell+ :wrap "EXAMPLE :noeval t"
#+PROPERTY: header-args:shell+ :dir "/ssh:root@139.178.88.146:/root/"
#+PROPERTY: header-args:shell+ :eval no-export
#+PROPERTY: header-args:tmate  :socket (symbol-value 'socket)
#+PROPERTY: header-args:tmate+ :session (concat (user-login-name) ":" (nth 4 (org-heading-components)))
#+NOPROPERTY: header-args:tmate+ :prologue (concat "cd " org-file-dir "\n")
#+PROPERTY: header-args:tmate+ :eval no-export
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+STARTUP: showeverything


* Start with Existing / Community Prow

Then eventually move to #wg-test-infra

** Already Multiple PRow Cluster /@bentheelder

- Focus on prow integration 

gc-admins google grouaps

How do we get prow credentials

- [ ] Create service account **something pusher
- [ ] Project Viewer - Bucket / 
- [ ] Staging Repos - Object Admin / Bucket Reader
* prow job setup
- [ ] merging configs into normal 
  - https://github.com/kubernetes/test-infra/pull/11414
- [ ] getting the now prow creds into
- [ ] Manifests in separate directiors, so we can have different owners
  - https://github.com/kubernetes/k8s.io/pull/197/files
- [ ] adding credentials to cluster
- [ ] create trash-bin w/ same perms
- [ ] garbage-collection will not only delete, but also promote to trash-bin
- [ ] image-promoter to use multiple manifests
prow job:
look at which file changed
only run promoter against changed files
run against all
- [ ] removal sync is supported
--garbage collect
remove tags that don't exist
Remove all untagged?
- [ ] image deletion going to trash-bin-bucket / folder
k8s-gcr-prod

* gcr

** service account

#+NAME: gcloud sa create
#+BEGIN_SRC tmate :results silent
  gcloud iam service-accounts create pusher-service-account --display-name="wg-k8s-infra pusher"
#+END_SRC

#+NAME: binder_hub_sa
#+BEGIN_SRC tmate
  gcloud iam service-accounts create pusher-service-account --display-name="wg-k8s-infra pusher"
  SERVICE_ACCOUNT=$(gcloud iam service-accounts list | grep BinderHub | awk '{print $2}')
  echo $SERVICE_ACCOUNT
  gcloud projects add-iam-policy-binding pusher-account-policy-binding \
    --member serviceAccount:${SERVICE_ACCOUNT} \
    --role=roles/storage.admin \
    --role=roles/other.admin
  gcloud iam service-accounts keys create ./secrets/service-account.json \
    --iam-account=$SERVICE_ACCOUNT \
    --key-file-type=json
#+END_SRC

#+RESULTS: add to storageAdmin role
#+BEGIN_SRC tmate
  gcloud projects add-iam-policy-binding pusher-account-policy-binding --member serviceAccount:${SERVICE_ACCOUNT} \
    --role=roles/storage.admin \
    --role=roles/storage.admin
#+END_SRC

#+RESULTS: create authentication json
#+BEGIN_SRC tmate
  gcloud iam service-accounts keys create ./secrets/service-account.json \
    --iam-account=$SERVICE_ACCOUNT \
    --key-file-type=json
#+END_SRC
 
[[file:secrets/service-account.json][file:secrets/service-account.json]] 

**  bucket
#+RESULTS: create authentication json
#+BEGIN_SRC tmate :variable SA_ID=binder_hub_sa()
  gsutil mb -p apisnoop -c multi_regional gs://apisnoop
#+END_SRC

#+RESULTS: create authentication json
#+BEGIN_SRC tmate :variable SA_ID=binder_hub_sa()
  gsutil mb -p apisnoop -c multi_regional gs://apisnoop
#+END_SRC


https://github.com/kubernetes/test-infra/pull/11414

* Footnotes
# Local Variables:
# eval: (set (make-local-variable 'ssh-user-host) "root@139.178.88.146")
# eval: (set (make-local-variable 'org-file-dir) (file-name-directory buffer-file-name))
# eval: (set (make-local-variable 'user-buffer) (concat user-login-name "." (file-name-base buffer-file-name)))
# eval: (set (make-local-variable 'tmpdir) (make-temp-file (concat "/dev/shm/" user-buffer "-") t))
# eval: (set (make-local-variable 'socket) (concat "/tmp/" user-buffer ".iisocket"))
# eval: (set (make-local-variable 'select-enable-clipboard) t)
# eval: (set (make-local-variable 'select-enable-primary) t)
# eval: (set (make-local-variable 'start-tmate-command) (concat "tmate -S " socket " new-session -A -s " user-login-name " -n main \\\"tmate wait tmate-ready \\&\\& sleep 2 \\&\\& tmate display -p \'\\\#{tmate_ssh}\\ \\\\#\\ " user-buffer "\\ \\\\#\\ \\\#{tmate_web}\' \\| xclip -i -sel p -f \\| xclip -i -sel c \\&\\& bash --login\\\""))
# eval: (xclip-mode 1) 
# eval: (gui-select-text (concat "rm -i " socket "; ssh -tAX " ssh-user-host " -L " socket ":" socket " " start-tmate-command))
# eval: (xclip-mode 1) 
# org-babel-tmate-session-prefix: ""
# org-babel-tmate-default-window-name: "main"
# org-use-property-inheritance: t
# End:
