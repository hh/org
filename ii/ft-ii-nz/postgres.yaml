# Postgres
# This is a simple and locked-down Postgres deployment that it'll be reusing, until [[https://github.com/zalando/postgres-operator][Postgres-Operator]] runs in my cluster. At the moment it's quite a challenge and seems uncertain.


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  serviceName: "postgres"
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      restartPolicy: Always
      containers:
      - name: postgres
        image: docker.io/postgres:12.7-alpine
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 70
          runAsGroup: 70
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: var-lib-postgresql
            mountPath: /var/lib/postgresql/data
          - name: var-run-postgresql
            mountPath: /var/run/postgresql
          - name: tmp
            mountPath: /tmp
        ports:
        - containerPort: 5432
        livenessProbe:
          exec:
            command:
            - "sh"
            - "-c"
            - "pg_isready"
            - "-U"
            - "$POSTGRES_USER"
          failureThreshold: 5
          periodSeconds: 10
          timeoutSeconds: 5
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-configuration
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-configuration
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-configuration
              key: POSTGRES_PASSWORD
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              name: postgres-configuration
              key: PGDATABASE
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: postgres-configuration
              key: PGUSER
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
      initContainers:
        - name: postgres-db-permissions-fix
          image: alpine:3.12
          command:
            - /bin/sh
            - -c
            - "/bin/chown -R 70:70 /var/lib/postgresql/data"
          volumeMounts:
          - name: var-lib-postgresql
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: var-lib-postgresql
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: var-run-postgresql
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
